O Observer √© um padr√£o comportamental, pois o foco √© sobre as responsabilidades dos objetos.


Uma classe observadora se responsabiliza por monitorar outro objeto
oAssim, quando ocorrer alguma altera√ß√£o ou eventos no objeto monitorado, o observador vai notificar os demais objetos do sistema.


Para simplificar: lembre do que acontece quando voc√™ recebe uma nova mensagem no Facebook. Quantos objetos/componentes s√£o atualizados?

Ser√° que cada objeto componente fica consultando o objeto listaDeMensagens freneticamente a cada segundo? ü§î O que ocorre √© justamente o conceito do padr√£o Observer, onde um objeto notifica os demais sobre essa atualiza√ß√£o. O React Redux pode ser considerado uma implementa√ß√£o do padr√£o Observer.