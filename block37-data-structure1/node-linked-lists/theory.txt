Os Nós (Chamados em inglês de Nodes) são um Tipo Abstrato de Dados. O nó é pequeno, elementar e, quando utilizado sozinho, não possui muita utilidade, mas é com ele que vários outros TADs muito poderosos são construídos. Um deles é a lista 
encadeada!


As listas encadeadas (em inglês chamadas LinkedLists) oferecem algumas vantagens importantes sobre outras estruturas de dados lineares. Ao contrário dos arrays, as LinkedLists são uma estrutura de dados dinâmica e redimensionável em tempo de execução. Além disso, as operações de inserção e exclusão são eficientes e facilmente implementadas.


///


Nó
O Nó (Node) é um TAD responsável por conter pelo menos duas coisas:
Um valor (qualquer tipo)
Um ponteiro (para o espaço de memória de outro Nó)


Esta segunda parte da gaveta que o Nó possui é chamada de ponteiro, pois ele aponta para outro elemento (outro nó). Este ponteiro aponta para o endereço de memória onde o próximo Nó se encontra. Mais especificamente, nesta parte da gaveta há o byte exato onde o próximo nó está alocado na memória RAM. Note que este segundo nó também terá um ponteiro de outro Nó, e assim sucessivamente, quantas vezes quisermos, até que o último Nó tenha um ponteiro nulo (null), que não aponta para nada.


sequencia de nos: lista encadeadada


///

Lista encadeada 

Ligando vários nós encadeados através de seus ponteiros, temos uma lista encadeada! Lembrando que cada nó contém um valor além do ponteiro, temos assim uma estrutura capaz de conter uma quantidade indefinida de elementos em sequência.

são um Tipo Abstrato de Dados capaz de armazenar elementos de forma sequencial.
